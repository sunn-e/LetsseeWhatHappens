#include <stdio.h>
const int N = 20;
const int blocksize 20;
_global_
void sayhello(char *a, int *b)
{
  x[threadIdx.a] += y[threadIdx.a];
}
int main()
{
  char x[ N] = "Hi Cuda,I'm sunny. donno why this zero \0";
	int y[N] = {15, 10, 6, 0, -11, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}; // gotta find out
  
  char *xx; //assigning
  char *yy;
  const int csize = N*sizeof(char);
  const int isize = N*sizeof(int);
  printf("%s",x);
  
  cudaMalloc( (void**)%xx,csize);  //allocaton
  cusaMalloc( (void**)&yy,isize);
  cudaMemcpy( xx, x, csize, cudaMemcpyHostToDevice ); //sending host to device
  cudaMemcpy( yy, y,isize, cudaMemcpyHostToDevice );
  
  dim3 dimBlock (blocksize,1);
  dim3 dimGrid( 1,1);
  hello<<<dimGrid,dimBlock>>>(xx,yy);
  cudaMemcpy( x, xx, csize, cudaMemcpyDeviceToHost );
  cudaFree( xx );  //freeing xx string buffer
  cuda( yy );
  
  printf("%s\n", x); //printing x's string
  return EXIT_SUCCESS;
  
}
